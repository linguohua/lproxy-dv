syntax = "proto3";

// protoc --rust_out=. --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_rust_plugin` dv.proto
// python -m grpc_tools.protoc -I./ --python_out=. --grpc_python_out=. ./dv.proto 
// if protobuffer tool version not match with newest protobuf rust lib, need to update:
// cargo install protobuf-codegen
// cargo install grpcio-compiler

service DvExport {
    rpc KickoutUuid(Kickout) returns (Result) {}
    rpc UuidCfgChanged(CfgChangeNotify) returns (Result) {}
}

message Result {
    int32 code = 1; // 0 succeed, otherwise failed
}

message Kickout {
    // which device to be kickout
    string uuid = 1;
}

message CfgChangeNotify {
    // which device's cfg has changed
    string uuid = 1;
    // the bandwidth limit changed
    uint64 kb_per_second = 2;
}
