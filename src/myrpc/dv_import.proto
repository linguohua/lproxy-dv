syntax = "proto3";

// protoc --rust_out=. --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_rust_plugin` dv_import.proto
// if protobuffer tool version not match with newest protobuf rust lib, need to update:
// cargo install protobuf-codegen
// cargo install grpcio-compiler
service BandwidthReport {
    rpc Report(BandwidthStatistics) returns (ReportResult) {}
}

message BandwidthStatistics{
    // all devices that join this server instance
    // will be reported, even it's flow is zero.
    // the controller server can know that which
    // devices are attached to this DV server now.
    repeated BandwidthUsage statistics = 1;
}

message BandwidthUsage {
    // device uuid
    string uuid = 1;
    // total sent bytes in this report period
    uint64 send_bytes = 2;
    // total recv_bytes in this report period
    uint64 recv_bytes = 3;
}

message ReportResult {
    // should always be 0
    int32 code = 1;
}

service DeviceCfgPull {
    rpc PullCfg(CfgPullRequest) returns (CfgPullResult) {}
}

message CfgPullRequest {
    string uuid = 1;
}

message CfgPullResult {
    int32 code = 1;
    uint64 bandwidth_limit_kbs = 2;
}
